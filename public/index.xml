<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Yan Tang | Home</title>
    <link>https://yantang.netlify.app/</link>
    <description>Recent content on Yan Tang | Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-ca</language><atom:link href="https://yantang.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>About Me üëã</title>
      <link>https://yantang.netlify.app/about/</link>
      <pubDate>Thu, 15 Sep 2022 15:35:00 -0400</pubDate>
      
      <guid>https://yantang.netlify.app/about/</guid>
      <description>Hello, welcome to my corner of the internet!
I‚Äôm Yan. I graduated with a Computer Science degree from Carleton University in Ottawa, and I‚Äôm currently a Software Developer. However, my journey to this point wasn‚Äôt linear, and that‚Äôs something I‚Äôm proud of.
I started with a Bachelor of Commerce degree in China, where I was born and raised. In 2017, I moved to Canada and pursued an MBA to build fundamental business skills.</description>
    </item>
    
    <item>
      <title>Coming soon üöß </title>
      <link>https://yantang.netlify.app/resume/</link>
      <pubDate>Thu, 15 Sep 2022 13:55:32 -0400</pubDate>
      
      <guid>https://yantang.netlify.app/resume/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Projects üë©üèª‚Äçüíª</title>
      <link>https://yantang.netlify.app/projects/</link>
      <pubDate>Thu, 15 Sep 2022 13:55:32 -0400</pubDate>
      
      <guid>https://yantang.netlify.app/projects/</guid>
      <description>Streamy React Web App Technologies: React/Redux, JavaScript, Axios, REST API (GitHub)
Streamy is a video streaming web application where users can record videos and stream live to other people Utilized both class-based and functional React components and developed reusable components to increase development productivity Fully implemented CRUD operations and used Redux to manage states across components Integrated Google Sign-In using Google&amp;rsquo;s OAuth2 authentication flow Neurological Device Simulator Technologies: C++, Qt, Multi-threading (QThread, QtConcurrent, QFutureWatcher), Observer, MVC (GitHub)</description>
    </item>
    
    <item>
      <title>Recommendations ‚ù§Ô∏è</title>
      <link>https://yantang.netlify.app/recommendations/</link>
      <pubDate>Thu, 15 Sep 2022 13:55:32 -0400</pubDate>
      
      <guid>https://yantang.netlify.app/recommendations/</guid>
      <description>See what others have to say about my work. You can also read on my LinkedIn profile.
&amp;ldquo;I first met Yan in 2023 when she was a junior majoring in Computer Science and preparing to start her internship at SurveyMonkey. Before she even joined, we exchanged emails where she shared some of the personal projects she had built using Python and React‚Äîtechnologies heavily used at our company. It was clear from the outset that she was already ahead of the curve.</description>
    </item>
    
    <item>
      <title>Work Experience üíº</title>
      <link>https://yantang.netlify.app/work/</link>
      <pubDate>Thu, 15 Sep 2022 13:55:32 -0400</pubDate>
      
      <guid>https://yantang.netlify.app/work/</guid>
      <description>Software Engineer I @ SurveyMonkey Technologies: React, TypeScript, JavaScript, GraphQL, Apollo Client, Python, Pyramid, Jinja/Mustache, GitHub Actions, GitHub Releases, Argo CD
Led the continued development of SurveyMonkey‚Äôs collector list page, following its initial migration during my internship, and successfully launched it to production Developed and deployed two additional key features for SurveyMonkey&amp;rsquo;s Collect Experience, enhancing product functionality and user experience for thousands of users Optimized the GraphQL API layer, refining existing queries, reducing over-fetching, and supporting new frontend use cases across teams Wrote comprehensive unit tests using Jest and React Testing Library to improve code reliability, catch regressions early, and maintain frontend stability Maintained and resolved critical bugs in the legacy Python web app (Pyramid, Jinja, Mustache), ensuring stability in production environments Took on release management and on-call responsibilities within one month of onboarding, ensuring smooth deployments using GitHub Actions, GitHub Releases, and Argo CD Collaborated closely with designers, PMs, and QA teams to streamline workflows across three testing environments and production, enabling faster iterations and timely feature releases Monitored system performance and production health using Splunk queries, proactively identifying and resolving issues across environments Contributed to a cross-functional project spanning multiple teams, leading to a successful live production launch for enterprise users; presented the project in an engineering-wide demo Mentored an intern, providing guidance on code reviews, debugging, and architectural decisions, ensuring high-quality contributions Reduced technical debt by refactoring folder structures, modernizing local dev environments, and improving documentation across both CoreWeb and the Python web app Software Engineer Intern @ SurveyMonkey Technologies: React, TypeScript, JavaScript, GraphQL, Apollo Client, Jest, React Testing Library</description>
    </item>
    
    
    
  </channel>
</rss>
